<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Piyush Bansal</title><link href="/" rel="alternate"></link><link href="/feeds/GitHub%20Contributions.atom.xml" rel="self"></link><id>/</id><updated>2013-04-28T13:00:00+05:30</updated><entry><title>Reincublog Django app</title><link href="/reincublog-django-app.html" rel="alternate"></link><updated>2013-04-28T13:00:00+05:30</updated><author><name>Piyush</name></author><id>tag:,2013-04-28:reincublog-django-app.html</id><summary type="html">&lt;p&gt;Reincublog is a Django app that I was asked to code as part of the recruitment process at &lt;a class="reference external" href="http://www.reincubate.com/"&gt;Reincubate&lt;/a&gt;. It&amp;#8217;s a weekend of glue code which I was set to see if I am a competent Django programmer. I&amp;#8217;m not sure that it&amp;#8217;s the kind of test that I show my best at - I&amp;#8217;m more of an algorithm&amp;nbsp;guy.&lt;/p&gt;
&lt;p&gt;However, after living on GitHub for a few months, the repo has picked up a couple of stars, and because I like to keep a super clean GitHub account, I&amp;#8217;ve decided to clean it out of my&amp;nbsp;account.&lt;/p&gt;
&lt;p&gt;So, from today the &lt;a class="reference external" href="https://github.com/shonenada/reincublog"&gt;Reincublog code&lt;/a&gt; will live on &lt;a class="reference external" href="https://github.com/shonenada"&gt;shonenada&amp;#8217;s GitHub&lt;/a&gt; hopefully it can grow and be&amp;nbsp;useful.&lt;/p&gt;
</summary><category term="django"></category></entry><entry><title>jsFiddle documentation update</title><link href="/jsfiddle-documentation-update.html" rel="alternate"></link><updated>2013-01-25T19:40:00+05:30</updated><author><name>Piyush</name></author><id>tag:,2013-01-25:jsfiddle-documentation-update.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://doc.jsfiddle.net/"&gt;Updated documentation&lt;/a&gt; for &lt;a class="reference external" href="http://jsfiddle.net/"&gt;jsFiddle&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/jsfiddle/jsfiddle-docs-alpha/commit/ef0f234e44e5a6d6791c09e672364fdf9518a31a"&gt;merged by Piotr&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Includes a new &lt;a class="reference external" href="http://doc.jsfiddle.net/tutorial.html"&gt;tutorial&lt;/a&gt; - but images are already out of&amp;nbsp;date!&lt;/p&gt;
&lt;p&gt;jsFiddle is such a great tool and my goal for the tutorial was to create a simple introduction which first time students would be able to understand and&amp;nbsp;execute.&lt;/p&gt;
</summary><category term="github"></category><category term="documentation"></category></entry><entry><title>Password cases and test fixes on pyramid_simpleauth</title><link href="/password-cases-and-test-fixes-on-pyramid_simpleauth.html" rel="alternate"></link><updated>2012-11-30T12:00:00+05:30</updated><author><name>Piyush</name></author><id>tag:,2012-11-30:password-cases-and-test-fixes-on-pyramid_simpleauth.html</id><summary type="html">&lt;p&gt;At &lt;a class="reference external" href="http://quib.ly"&gt;Quibly&lt;/a&gt; we&amp;#8217;re using Pyramid at the centre of a Python framework. Providing user functionality is the &lt;a class="reference external" href="https://github.com/thruflo/pyramid_simpleauth"&gt;pyramid_simpleauth&lt;/a&gt;&amp;nbsp;library.&lt;/p&gt;
&lt;p&gt;While writing itegration tests before we put the site live, I found that my test users we not able to authenticate with their testing passwords (usually just a simple string like &amp;#8216;Password&amp;#8217;). Digging inside the simpleauth library, I found some fixes necessary to how cases are handled by the lib - plus also fixed some doctests while I was at&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;These have all been merged in now and the library rolled up a&amp;nbsp;version.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;GitHub Issue: &lt;a class="reference external" href="https://github.com/thruflo/pyramid_simpleauth/issues/5"&gt;Any upper case characters in passwords break&amp;nbsp;auth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub Pull Request: &lt;a class="reference external" href="https://github.com/thruflo/pyramid_simpleauth/pull/7"&gt;Password cases possible&amp;nbsp;fix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="github"></category><category term="python"></category><category term="pyramid"></category></entry><entry><title>Django-mailchimp compatability with v1.3 API</title><link href="/django-mailchimp-compatability-with-v13-api.html" rel="alternate"></link><updated>2012-09-25T07:14:00+05:30</updated><author><name>Piyush</name></author><id>tag:,2012-09-25:django-mailchimp-compatability-with-v13-api.html</id><summary type="html">&lt;p&gt;For a Fublo project with &lt;a class="reference external" href="http://www.neuxpower.com/"&gt;Neuxpower&lt;/a&gt;, we had to communicate with &lt;a class="reference external" href="http://apidocs.mailchimp.com/"&gt;Mailchimp via their &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt;. On Django one of the best libraries for this is &lt;a class="reference external" href="https://github.com/piquadrat/django-mailchimp"&gt;django-mailchimp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, in its previous state django-mailchimp wasn&amp;#8217;t able to specify a &lt;tt class="docutils literal"&gt;send_welcome&lt;/tt&gt; parameter which lets Mailchimp know whether it should send out a list welcome message when a new user subscribes. For the project, we were managing the signup explicitly with Neuxpower&amp;#8217;s code, so no welcome message was required and the default for Mailchimp was &lt;tt class="docutils literal"&gt;True&lt;/tt&gt; for sending meaning that Neuxpower&amp;#8217;s new customers would get hit with a double welcome message&amp;#8230; Not&amp;nbsp;desirable.&lt;/p&gt;
&lt;p&gt;This small change is now merged in with the library, which has rolled up to a &amp;#8216;v1.3&amp;#8217; status as there is no backward&amp;nbsp;compatibilty.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/piquadrat/django-mailchimp/issues/5"&gt;GitHub&amp;nbsp;Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/piquadrat/django-mailchimp/pull/6"&gt;GitHub Pull&amp;nbsp;Request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="github"></category><category term="python"></category><category term="django"></category><category term="mailchimp"></category></entry><entry><title>Fixing exception in django-menu</title><link href="/fixing-exception-in-django-menu.html" rel="alternate"></link><updated>2012-05-05T19:40:00+05:30</updated><author><name>Piyush</name></author><id>tag:,2012-05-05:fixing-exception-in-django-menu.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/rossp/django-menu/"&gt;django-menu&lt;/a&gt; is a nice simple library for building very simple menus. However, when a site is loaded for the first time, the menu structure was not configured and so it was throwing a &lt;tt class="docutils literal"&gt;DoesNotExist&lt;/tt&gt; Exception.&lt;/p&gt;
&lt;p&gt;This tiny pull request simply wrapped the call to the menu in a &lt;tt class="docutils literal"&gt;try&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;except&lt;/tt&gt; so that new sites using django-menu won&amp;#8217;t fall over on first&amp;nbsp;load.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rossp/django-menu/pull/5"&gt;GitHub&amp;nbsp;Issue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="github"></category><category term="python"></category><category term="django"></category></entry></feed>